Short-term (before RacketCon)

Manually instantiate `flscene3` with `Shape` and rename to `scene`

(: pict3d-render (-> Pict3D Integer Integer (Instance Bitmap%)))

View frustum culling

Movement: find a way to move slowly or quickly (acceleration? speed control keys?)

pict3d%
 * Save/load pict3d% snips (needs snip admin)
 * Make pict3d% snips save and load drawing parameters (e.g. near and far plane distances)
 * Fix editor lock problem

Fix "resizing sphere animation window creates garbage on borders"

======================================================================================================
Medium-term (if time before RacketCon)

Reorganize engine code
 * Remove shape-polymorphism in scenes
 * Separate shape/scene code from generating passes

Fix specular highlight seam

Use GL_MAP_UNSYNCHRONIZED_BIT and round-robin (should save 30% according to tests)

Add empty flaabb3 variant

New shape constructors
 * cylinder
 * heightmap/terrain
 * smooth existing shape (snap extremely close vertices, average normals)
 * skybox (render scene in six directions, then construct a texture-mapped rect)

New kinds of Vertices
 * vao-vertices
 * indexed-single-vertices
 * indexed-multi-vertices
 * for indexed, try using glDrawElementsBaseVertex instead of manually incrementing offsets

pict3d% GUI
 * Point hovered over, plane normal at that point
 ? Resize corner

pict3d% GUI toggles
 * Sunlight and underlight
 * Debug view of lights
 * Normals, outlines, etc.

Light min radius (test with cartoon lighting)

Make rendering with inconsistent view matrix (e.g. scale negative x) not render shapes inside-out

Don't use plane normal transform on directional light (possibly don't apply transforms at all)

Try state grouping on a test application using `equal?` instead of `eq?`

? Precompute ray-tracing per-pixel directions when projection matrix changes
? Package transform and inverse into a struct (may interfere with state grouping by `eq?`)
? Draw Pict3D with alpha (to let REPL background show through)
? Special-case transformation matrix struct for translation
? Pinch rectangle sides (implement with a projective transformation for rects only)

======================================================================================================

Long-term TODO

Figure out a nice functional API for textures

Screen-space ambient occlusion (paper "Scalable Ambient Obscurance")

Shadow mapping

======================================================================================================

Deprecated stuff I use
 * glBegin/glEnd (in `gl-fullscreen-quad`)
 * gl_TexCoord
 * default vertex shader
 * gl_FragData
 * GL_QUADS (replace with GL_TRIANGLE_STRIP and multi-vertices, once I have )
